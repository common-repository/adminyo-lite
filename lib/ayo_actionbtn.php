<?php/* Floating Action Button */class Ayo_Action_Button {  protected $allowed_types;    function __construct()     {        # Register admin styles and scripts        add_action( 'admin_print_styles', array( $this, 'ayo_register_admin_styles' ) );        add_action( 'admin_enqueue_scripts', array( $this, 'ayo_register_admin_scripts' ) );   }    public function x_get_current_post_type() {        global $post, $typenow, $pagenow,$ayo_options;        if( $post && $post->post_type && $pagenow == 'post-new.php' || $pagenow == 'post.php' ) :            $post_type = $post->post_type;                        wp_register_script( 'ayo_actionjs2', AdminYo_dirURL . '../js/ayo_holdactionbtn.js' );            wp_enqueue_script(  'ayo_actionjs2', AdminYo_dirURL . '../js/ayo_holdactionbtn.js', array( 'jquery' ) );                        //CSS Styles         if  ($ayo_options['hold_clickfab'] == true)          {            wp_register_style( 'ayo_holdclick', AdminYo_dirURL . '../css/ayo_circular_plus.css' );            wp_enqueue_style('ayo_holdclick');          };        else :            return false;        endif;        return $post_type;        //second    }    public function ayo_register_admin_styles()      {        /* Only load js css we are are editing a post (build in or custom post type) or page*/        if($this->x_get_current_post_type()) :      endif;      }    public function ayo_register_admin_scripts() {        /* Only load js if we are are editing a post (build in or custom post type) or page*/        if($this->x_get_current_post_type()) :          ///          function enqueue_scripts_styles_init()          {            wp_enqueue_script( 'ajax-script', plugins_url( '/js/ayo_pin.js', __FILE__ ), array('jquery'), 1.0 ); // jQuery will be included automatically            wp_localize_script( 'ajax-script', 'ajax_object', array( 'ajaxurl' => admin_url( 'admin-ajax.php' ) ) ); // setting ajaxurl        //    wp_enqueue_script( 'ajax-script', plugins_url( '/js/ayo_actionbtn.js', __FILE__ ), array('jquery'), 1.0 );                      };add_action('init', 'enqueue_scripts_styles_init');    function publish_post()      {        wp_localize_script('updatefrombottom-admin-script', 'updatefrombottomParams', 'update');      };  //  add_action('post_submitbox_misc_actions', 'pin_the_post');    function ayo_pin_the_post(){    $cote = get_post_meta($_POST['id'], 'pin_featured', true);      if($_POST['pin_featured'] == 'no') {        //  $newCote = $cote++;          update_post_meta($_POST['id'], 'pin_featured', 'yes');      } else {        //  $newCote = $cote--;          update_post_meta($_POST['id'], 'pin_featured', 'no');            }          };add_action('the_action_hook', 'ayo_pin_the_post');/* Button Render */global $ayo_options;if ($ayo_options['menu_post_plus'] == true) {?><!-- Make the menu icon--><div class="butonu"><nav class="fab-menu">  <input type="checkbox" href="#" class="fab-menu-open" name="fab-menu-open" id="fab-menu-open"/>  <label class="fab-menu-open-button" for="fab-menu-open">    <span class="hamburger hamburger-1"></span>    <span class="hamburger hamburger-2"></span>    <span class="hamburger hamburger-3"></span>  </label>    <a href="javascript:updatepost()" class="fab-menu-item" title="Update/Publish post"> <span class="dashicons dashicons-update"></span> </a>  <a target="_blank" href="<?php echo esc_url( get_permalink($post_id,$status) );?>" class="fab-menu-item" title="Preview  post"> <span class="dashicons dashicons-visibility"></span> </a>  <a href="#" class="fab-menu-item" title="Pin/Unpin post"> <div class="dash_icon_pin"><input type="hidden"  name="ayo-pin-it" value="77" class="post_id" /><?php $meta = ayo_isPinned(get_the_ID()); if ($meta) { ?> <span class="dashicons dashicons-sticky"></span> <?php } else { ?> <span class="dashicons dashicons-admin-post"></span><?php };?> </div></a>  <a href="#" class="fab-menu-item" id="backtotop" title="Scroll to TOP"> <span class="dashicons dashicons-arrow-up-alt2"></span> </a>  <a href="#" class="fab-menu-item" id="backtobottom" title="Scroll to BOTTOM">  <span class="dashicons dashicons-arrow-down-alt2"></span></a><?php/*Check if post it's a draft or not*/global $pagenow;if ( $pagenow == 'post.php' ){?>  <a href="javascript:savetodraft()" class="fab-menu-item" style="cursor:not-allowed;" title="Cannot save as draft since the post it's already published"> <span class="dashicons dashicons-clipboard" ></span> </a><?php }else {?>  <a href="javascript:savetodraft()" class="fab-menu-item" title="Save to draft"> <span class="dashicons dashicons-clipboard"></span> </a><?php };?>  <a href="admin.php?action=ayo_duplicate_post_as_draft&amp;post=<?php echo get_the_ID() ?>" class="fab-menu-item" title="Duplicate post"> <span class="dashicons dashicons-admin-page"></span></a></nav><!-- filters --><svg xmlns="http://www.w3.org/2000/svg" version="1.1">    <defs>      <filter id="shadowed-goo">                    <feGaussianBlur in="SourceGraphic" result="blur" stdDeviation="10" />          <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />          <feGaussianBlur in="goo" stdDeviation="3" result="shadow" />          <feColorMatrix in="shadow" mode="matrix" values="0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2" result="shadow" />          <feOffset in="shadow" dx="1" dy="1" result="shadow" />          <feComposite in2="shadow" in="goo" result="goo" />          <feComposite in2="goo" in="SourceGraphic" result="mix" />      </filter>      <filter id="goo">          <feGaussianBlur in="SourceGraphic" result="blur" stdDeviation="10" />          <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />          <feComposite in2="goo" in="SourceGraphic" result="mix" />      </filter>    </defs></svg></div><!--end of menu--><?php}; //END of simple FABendif;  }};/* SAVE TO DRAFT FUNCTION*//* Function creates post duplicate as a draft and redirects then to the edit post screen */function ayo_duplicate_post_as_draft(){	global $wpdb;	if (! ( isset( $_GET['post']) || isset( $_POST['post'])  || ( isset($_REQUEST['action']) && 'ayo_duplicate_post_as_draft' == $_REQUEST['action'] ) ) ) {		wp_die('No post to duplicate has been supplied!');	} /* Get the original post id */	$post_id = (isset($_GET['post']) ? absint( $_GET['post'] ) : absint( $_POST['post'] ) );/*And all the original post data then	 */	$post = get_post( $post_id );/* if you don't want current user to be the new post author, then change next couple of lines to this: $new_post_author = $post->post_author; */	$current_user = wp_get_current_user();	$new_post_author = $current_user->ID;/* if post data exists, create the post duplicate */	if (isset( $post ) && $post != null) {/* new post data array*/		$args = array(			'comment_status' => $post->comment_status,			'ping_status'    => $post->ping_status,			'post_author'    => $new_post_author,			'post_content'   => $post->post_content,			'post_excerpt'   => $post->post_excerpt,			'post_name'      => $post->post_name.'_copy',			'post_parent'    => $post->post_parent,			'post_password'  => $post->post_password,			'post_status'    => 'draft',			'post_title'     => $post->post_title.'_copy',			'post_type'      => $post->post_type,			'to_ping'        => $post->to_ping,			'menu_order'     => $post->menu_order		); /* insert the post by wp_insert_post() function	 */		$new_post_id = wp_insert_post( $args );/* get all current post terms ad set them to the new post draft	 */		$taxonomies = get_object_taxonomies($post->post_type); // returns array of taxonomy names for post type, ex array("category", "post_tag");		foreach ($taxonomies as $taxonomy) {			$post_terms = wp_get_object_terms($post_id, $taxonomy, array('fields' => 'slugs'));			wp_set_object_terms($new_post_id, $post_terms, $taxonomy, false);		}/* duplicate all post meta just in two SQL queries */		$post_meta_infos = $wpdb->get_results("SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$post_id");		if (count($post_meta_infos)!=0) {			$sql_query = "INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) ";			foreach ($post_meta_infos as $meta_info) {				$meta_key = $meta_info->meta_key;				$meta_value = addslashes($meta_info->meta_value);				$sql_query_sel[]= "SELECT $new_post_id, '$meta_key', '$meta_value'";			}			$sql_query.= implode(" UNION ALL ", $sql_query_sel);			$wpdb->query($sql_query);		}/* finally, redirect to the edit post screen for the new draft */		wp_redirect( admin_url( 'post.php?action=edit&post=' . $new_post_id ) );		exit;	} else {		wp_die('Post creation failed, could not find original post: ' . $post_id);	}}add_action( 'admin_action_ayo_duplicate_post_as_draft', 'ayo_duplicate_post_as_draft' );/* Function creates post duplicate as a publish and redirects then to the edit post screen */function ayo_duplicate_post_as_publish(){	global $wpdb;	if (! ( isset( $_GET['post']) || isset( $_POST['post'])  || ( isset($_REQUEST['action']) && 'ayo_duplicate_post_as_publish' == $_REQUEST['action'] ) ) ) {		wp_die('No post to duplicate has been supplied!');	} /* get the original post id	 */	$post_id = (isset($_GET['post']) ? absint( $_GET['post'] ) : absint( $_POST['post'] ) );/* and all the original post data then */	$post = get_post( $post_id );/* if you don't want current user to be the new post author, then change next couple of lines to this: $new_post_author = $post->post_author; */	$current_user = wp_get_current_user();	$new_post_author = $current_user->ID; /* if post data exists, create the post duplicate	 */	if (isset( $post ) && $post != null) { /* new post data array */		$args = array(			'comment_status' => $post->comment_status,			'ping_status'    => $post->ping_status,			'post_author'    => $new_post_author,			'post_content'   => $post->post_content,			'post_excerpt'   => $post->post_excerpt,			'post_name'      => $post->post_name.'_copy',			'post_parent'    => $post->post_parent,			'post_password'  => $post->post_password,			'post_status'    => 'draft',			'post_title'     => $post->post_title.'_copy',			'post_type'      => $post->post_type,			'to_ping'        => $post->to_ping,			'menu_order'     => $post->menu_order		);/* insert the post by wp_insert_post() function	 */		$new_post_id = wp_insert_post( $args );/* get all current post terms ad set them to the new post draft		 */		$taxonomies = get_object_taxonomies($post->post_type); // returns array of taxonomy names for post type, ex array("category", "post_tag");		foreach ($taxonomies as $taxonomy) {			$post_terms = wp_get_object_terms($post_id, $taxonomy, array('fields' => 'slugs'));			wp_set_object_terms($new_post_id, $post_terms, $taxonomy, false);		}/* duplicate all post meta just in two SQL queries */		$post_meta_infos = $wpdb->get_results("SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$post_id");		if (count($post_meta_infos)!=0) {			$sql_query = "INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) ";			foreach ($post_meta_infos as $meta_info) {				$meta_key = $meta_info->meta_key;				$meta_value = addslashes($meta_info->meta_value);				$sql_query_sel[]= "SELECT $new_post_id, '$meta_key', '$meta_value'";			}			$sql_query.= implode(" UNION ALL ", $sql_query_sel);			$wpdb->query($sql_query);		}		//echo $post->post_type; die;/* finally, redirect to the edit post screen for the new publish */		wp_redirect( admin_url( 'edit.php?post_type=' . $post->post_type ) );		exit;	} else {		wp_die('Post creation failed, could not find original post: ' . $post_id);	}}add_action( 'admin_action_ayo_duplicate_post_as_publish', 'ayo_duplicate_post_as_publish' );/* Add the duplicate link to action list for post_row_actions */function ayo_duplicate_post_link( $actions, $post ) {	if (current_user_can('edit_posts')) {		$actions['duplicate'] = '<a href="admin.php?action=ayo_duplicate_post_as_draft&amp;post=' . $post->ID . '" title="Duplicate and go to edit page" rel="permalink">Duplicate & Edit</a>';		$actions['clone'] = '<a href="admin.php?action=ayo_duplicate_post_as_publish&amp;post=' . $post->ID . '" title="Duplicate " rel="permalink">Duplicate</a>';	}	return $actions;} add_filter( 'post_row_actions', 'ayo_duplicate_post_link', 10, 2 );add_filter('page_row_actions', 'ayo_duplicate_post_link', 10, 2);/* Only use in wp-admin*/if (is_admin()):	$ufb = new Ayo_Action_Button();endif;/* Card unPin */add_action( 'wp_ajax_ayo_actionbtn_pin', 'ayo_actionbtn_pin' );function ayo_actionbtn_pin() {	$meta = get_post_meta( $_GET["post_id"], '_is_featured', true );		if (strlen($meta) == 0 ) {			update_post_meta($_GET["post_id"], '_is_featured', 'yes');		header("Location: ".$_SERVER['PHP_SELF']);		} else {				delete_post_meta($_GET["post_id"], '_is_featured', 'yes');			//	header("Refresh:0");      header("Location: ".$_SERVER['PHP_SELF']);			}    echo $_GET["post_id"];    die();}//END of file